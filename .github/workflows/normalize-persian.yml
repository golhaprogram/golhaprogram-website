name: Normalize Persian Text

on:
  pull_request:
    paths:
      - '**/*.md'
      - '**/*.markdown'

jobs:
  normalize-persian:
    runs-on: ubuntu-latest
    # Only run if PR is from same repository (not forks)
    if: github.event.pull_request.head.repo.full_name == github.repository
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Get changed files
      id: changed-files
      run: |
        # Get only the markdown files that were actually changed in this PR
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(md|markdown)$' || true)
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No markdown files changed in this PR"
          echo "changed_files=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "Changed markdown files:"
        echo "$CHANGED_FILES"
        
        # Convert to space-separated list for the next step
        CHANGED_FILES_LIST=$(echo "$CHANGED_FILES" | tr '\n' ' ')
        echo "changed_files=$CHANGED_FILES_LIST" >> $GITHUB_OUTPUT
    
    - name: Normalize Persian Text
      id: normalize
      if: steps.changed-files.outputs.changed_files != ''
      run: |
        CHANGED_FILES="${{ steps.changed-files.outputs.changed_files }}"
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No files to process"
          exit 0
        fi
        
        # Create the normalizer script
        cat > normalize.js << 'EOF'
        const fs = require('fs');
        
        function normalizePersianText(text) {
            return text
                // Most common issues
                .replace(/ك/g, 'ک')   // Arabic kaf to Persian kaf
                .replace(/ي/g, 'ی')   // Arabic yeh to Persian yeh
                
                // Other Arabic letters commonly mixed up
                .replace(/ؤ/g, 'و')   // Arabic waw with hamza to Persian waw
                .replace(/إ/g, 'ا')   // Arabic alef with hamza below to Persian alef
                .replace(/أ/g, 'ا')   // Arabic alef with hamza above to Persian alef
                .replace(/آ/g, 'آ')   // Ensure consistent alef with madda (this is actually correct)
                .replace(/ة/g, 'ه')   // Arabic teh marbuta to Persian heh
                
                // Numbers - Arabic-Indic to Persian
                .replace(/٠/g, '۰')   // 0
                .replace(/١/g, '۱')   // 1
                .replace(/٢/g, '۲')   // 2
                .replace(/٣/g, '۳')   // 3
                .replace(/٤/g, '۴')   // 4
                .replace(/٥/g, '۵')   // 5
                .replace(/٦/g, '۶')   // 6
                .replace(/٧/g, '۷')   // 7
                .replace(/٨/g, '۸')   // 8
                .replace(/٩/g, '۹')   // 9
                
                // Less common but still seen
                .replace(/ء/g, 'ٔ')   // Arabic hamza to Persian hamza
                .replace(/ئ/g, 'ئ')   // Ensure Persian yeh with hamza (this is correct)
                .replace(/ؤ/g, 'ؤ');  // Persian waw with hamza (keep as is)
        }
        
        function processFile(filePath) {
            try {
                if (!fs.existsSync(filePath)) {
                    console.log('⚠️  File not found:', filePath);
                    return false;
                }
                
                const content = fs.readFileSync(filePath, 'utf8');
                const normalized = normalizePersianText(content);
                
                if (content !== normalized) {
                    fs.writeFileSync(filePath, normalized, 'utf8');
                    console.log('✅ Normalized:', filePath);
                    return true;
                } else {
                    console.log('✨ Already normalized:', filePath);
                    return false;
                }
            } catch (error) {
                console.error('❌ Error processing', filePath, ':', error.message);
                return false;
            }
        }
        
        // Process only the files passed as arguments
        const files = process.argv.slice(2).filter(f => f.trim().length > 0);
        
        if (files.length === 0) {
            console.log('No files to process');
            process.exit(0);
        }
        
        console.log(`Processing ${files.length} changed markdown files:`);
        files.forEach(f => console.log(`  - ${f}`));
        
        let changedFiles = [];
        files.forEach(file => {
            if (processFile(file.trim())) {
                changedFiles.push(file.trim());
            }
        });
        
        if (changedFiles.length > 0) {
            console.log(`\n🎉 Normalized ${changedFiles.length} files:`);
            changedFiles.forEach(file => console.log(`  - ${file}`));
            process.exit(1); // Signal that changes were made
        } else {
            console.log('\n✨ All files already normalized - no changes needed');
            process.exit(0);
        }
        EOF
        
        # Run the script with only the changed files
        node normalize.js $CHANGED_FILES
    
    - name: Commit and push changes
      if: failure() # Only runs if normalization script found changes (exit 1)
      run: |
        # Clean up the temporary script
        rm -f normalize.js
        
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add -A
        
        if git diff --cached --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        
        git commit -m "🔄 Auto-normalize Persian text
        
        Converted Arabic letters to Persian equivalents in changed files:
        - ك → ک (kaf)
        - ي → ی (yeh)
        - ؤ → و (waw)
        - إ/أ → ا (alef)
        - ة → ه (heh)
        - Arabic-Indic numerals → Persian numerals
        
        Only processed files modified in this PR."
        
        git push origin ${{ github.head_ref }}
    
    - name: Cleanup
      if: always()
      run: |
        # Always clean up the temporary script
        rm -f normalize.js